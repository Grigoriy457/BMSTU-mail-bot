from typing import Union
from aiogram import Router, types, F
from aiogram.filters import Command

import config
import database
from handlers.settings import mail_sessions, notify_with_sound


router = Router()
router.include_router(mail_sessions.router)
router.include_router(notify_with_sound.router)


@router.message(Command("settings"))
@router.message(F.text == config.KEYBOARD_BUTTONS["settings"])
@router.callback_query(F.data == "settings")
async def settings(message: Union[types.Message, types.CallbackQuery], db_session: database.AsyncSession):
    tg_user = await db_session.scalar(
        database.select(database.models.TgUser)
        .where(database.models.TgUser.id == message.from_user.id)
    )
    text = "<b>üìß –ü–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏</b>\n"\
           "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏\n\n"\
           "<b>üîî –í–∫–ª/–í—ã–∫–ª –∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>\n"\
           "–í–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –æ –Ω–æ–≤—ã—Ö –ø–∏—Å—å–º–∞—Ö\n\n"\
           "‚ÑπÔ∏è –ü–æ—á—Ç–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç"
    reply_markup = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üìß –ü–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏", callback_data="settings__mail_sessions")],
        [types.InlineKeyboardButton(
            text=f"üîî {'–í—ã–∫–ª—é—á–∏—Ç—å' if tg_user.notify_with_sound else '–í–∫–ª—é—á–∏—Ç—å'} –∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
            callback_data=f"settings__notify_with_sound__{'off' if tg_user.notify_with_sound else 'on'}"
        )]
    ])
    if isinstance(message, types.Message):
        await message.answer(text=text, reply_markup=reply_markup)
    else:
        await message.message.edit_text(text=text, reply_markup=reply_markup)

